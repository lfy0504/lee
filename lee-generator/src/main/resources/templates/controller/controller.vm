package ${basePackage}.controller.${entityPackage};


import com.github.pagehelper.PageInfo;
import ${basePackage}.result.ServiceResult;
import ${basePackage}.result.WebResult;
import ${basePackage}.${entityPackage}.pojo.${className};
import ${basePackage}.${entityPackage}.service.${className}Service;
import org.springframework.beans.BeanUtils;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;

@RestController
@RequestMapping("/${entity}")
public class ${className}Controller {

    @Resource
    ${className}Service ${entity}Service;

    @RequestMapping(value = "/save",method = RequestMethod.POST)
    public WebResult<Integer> save(@RequestBody ${className} ${entity}){
        WebResult<Integer> webResult = new WebResult<Integer>();
        ServiceResult<Integer> serviceResult = ${entity}Service.save(${entity});
        BeanUtils.copyProperties(serviceResult,webResult);
        return webResult;
    }

    @RequestMapping(value = "/getOne",method = RequestMethod.GET)
    public WebResult<${className}> getOne(String id){
        WebResult<${className}> webResult = new WebResult<${className}>();
        ServiceResult<${className}> serviceResult = ${entity}Service.getById(id);
        BeanUtils.copyProperties(serviceResult,webResult);
        return webResult;
    }

    @RequestMapping(value = "/page",method = RequestMethod.POST)
    public WebResult<PageInfo<${className}>> page(${className} ${entity},int pageNum,int pageSize){
        WebResult<PageInfo<${className}>> webResult = new WebResult<>();
        ServiceResult<PageInfo<${className}>> serviceResult = ${entity}Service.page(${entity},pageNum,pageSize);
        BeanUtils.copyProperties(serviceResult,webResult);
        return webResult;
    }

    @RequestMapping(value = "/update",method = RequestMethod.POST)
    public WebResult<Integer> update(@RequestParam ${className} ${entity}){
        WebResult<Integer> webResult = new WebResult<Integer>();
        ServiceResult<Integer> serviceResult = ${entity}Service.update(${entity});
        BeanUtils.copyProperties(serviceResult,webResult);
        return webResult;
    }

    @RequestMapping(value = "/delete",method = RequestMethod.GET)
    public WebResult<Integer> delete(String id){
        WebResult<Integer> webResult = new WebResult<Integer>();
        ServiceResult<Integer> serviceResult = ${entity}Service.delete(id);
        BeanUtils.copyProperties(serviceResult,webResult);
        return webResult;
    }

}